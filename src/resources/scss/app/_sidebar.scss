@use "../helpers/responsive";

.Sidebar {
  --Sidebar-height: inherit;
  --Sidebar-width-collapsed: #{$sidebar-width-collapsed};
  --Sidebar-padding: 0.5rem;
  --Sidebar-logo-size: 2rem;
  --Sidebar-link-height: 3rem;
  --Sidebar-link-min-height: 2rem;
  --Sidebar-link-padding: 1rem;
  --Sidebar-link-transition: #{$transition-2};
  --Sidebar-font-size: #{$font-size};
}

.Sidebar {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  width: inherit;
  max-width: var(--Sidebar-width);
  height: 100%;
  transition: $transition-1;

  $self: #{&};

  &__searchbox {
    @extend .Box;
    padding: $spacing-xs;
    cursor: pointer;
    &-input {
      --input-padding: #{$spacing-xs} #{$spacing-md};
      display: flex;
      align-items: center;
      gap: 0.75rem;
      padding: var(--input-padding);
      border: 1px solid var(--base-color-muted);
      border-radius: $radius-md;
      transition: $transition-1;
    }
    &-icon {
      color: $color-txt-grey;
    }
    &-placeholder {
      appearance: none;
      cursor: inherit;
      pointer-events: none;
      outline: none;
      width: 100%;
      border: none;
      color: $color-txt-grey;
      font-size: $font-size;
      @include make-text-ellipsised;
    }
    &:hover &-input {
      box-shadow: $shadow-outlined;
    }
  }

  &__main {
    @extend .Box;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    padding: var(--Sidebar-padding);
    background-color: var(--base-box);
    @include scroll-bar-overlay;
  }

  &__link {
    position: relative;
    display: flex;
    align-items: center;
    gap: 0.75rem;
    min-height: var(--Sidebar-link-min-height);
    height: var(--Sidebar-link-height);
    padding: 0 var(--Sidebar-link-padding);
    color: var(--txt-grey);
    font-size: var(--Sidebar-font-size);
    border-radius: $radius-md;
    transition: var(--Sidebar-link-transition);
    @include make-text-ellipsised;

    & > * {
      display: initial;
    }
    &-icon {
      width: calc(var(--Sidebar-font-size) * 1.25);
      text-align: center;
      & > * {
        min-width: 100%;
      }
    }

    &:hover {
      background-color: var(--base-hover-overlay);
    }

    &.active,
    &[aria-current="page"] {
      cursor: none;
      pointer-events: none;
      color: var(--base-color-highlight);
      font-weight: 700;
      &::before {
        content: "";
        position: absolute;
        left: 3px;
        margin-top: -3px;
        width: 3px;
        border-radius: $radius-md;
        height: 1.25rem;
        background-color: var(--base-color-highlight);
        transition: var(--Sidebar-link-transition);
      }
    }
  }

  &__dash {
    padding: var(--Sidebar-padding) 0;
    width: calc(100% - var(--Sidebar-link-padding));
    margin-left: auto;
    margin-right: auto;
    height: 0;
    $dash: #{&};
    &::before {
      content: "";
      display: block;
      width: 100%;
      height: 1px;
      background-color: $color-lightergrey;
    }
    &-end {
      @extend #{$dash};
      margin-top: auto;
    }
  }
}

@mixin sidebar-collapse {
  .Sidebar {
    --Sidebar-width: var(--Sidebar-width-collapsed);
    --Sidebar-padding: 0.25rem;
    --Sidebar-link-padding: 0;
    &__searchbox {
      &-input {
        --input-padding: 0;
        justify-content: center;
        border-color: transparent;
        box-shadow: none !important;
      }
      &-placeholder {
        display: none;
      }
    }
    &__toggle {
      justify-content: center;
      &-brand {
        display: none;
      }
    }
    &__link {
      --Sidebar-link-height: 2.5rem;
      margin: 0.25rem 0;
      justify-content: center;
      > *:not(#{&}-icon) {
        display: none;
      }
      &.active,
      &[aria-current="page"] {
        &::before {
          border-radius: $radius-circle;
          height: 3px;
        }
      }
    }
  }
}

[aria-expanded="false"] {
  @include sidebar-collapse;
}
@include responsive.make-range-responsive(sm, lg) {
  @include sidebar-collapse;
}
