// @use '../variables';
@use '../helpers/helpers';
@use './container';

.Grid {
  --Grid-max-width: 100%;
  --Grid-spacing: 0.75rem;
  --Grid-gutter: #{$main-gutter};
  --Grid-sidebar-width: #{$sidebar-width};
  --Grid-rightbar-width: #{$rightbar-width};
}

.Grid {
  display: grid;
  grid-template-areas:
    'sidebar header header'
    'sidebar main main'
    'sidebar footer footer';
  grid-template-columns: var(--Grid-sidebar-width) auto var(
      --Grid-rightbar-width
    );
  gap: calc(var(--Grid-spacing) * 1);
  width: var(--Grid-max-width);
  max-width: var(--Grid-max-width);
  min-width: var(--Grid-max-width);
  padding-left: var(--Grid-gutter);
  padding-right: var(--Grid-gutter);
  transition: all 0.15s linear;

  &-dashboard {
    grid-template-areas:
      'sidebar header header'
      'sidebar main rightbar'
      'sidebar footer footer';
  }

  @include container.make-breakpoint-up(md) {
    // grid-template-columns: var(--Grid-sidebar-width-collapsed) auto var(--Grid-rightbar-width-collapsed);
    --Grid-sidebar-width: #{$sidebar-width-collapsed};
    --Grid-sidebar-width: #{$sidebar-width-collapsed};
  }
  @include container.make-breakpoint-up(xs) {
    grid-template-columns: 1fr;
    grid-template-rows: auto;
    gap: var(--Grid-spacing) 0;
    grid-template-areas: 'header' 'main' 'footer';
  }

  &__header {
    grid-area: header;
    position: fixed;
    left: calc(var(--Grid-sidebar-width) + var(--Grid-spacing) * 2);
    width: calc(100% - var(--Grid-sidebar-width));
    height: fit-content;
    padding-left: var(--Grid-gutter);
    padding-right: var(--Grid-gutter);
  }
  &__sidebar {
    grid-area: sidebar;
  }
  &__main {
    grid-area: main;
  }
  &__rightbar {
    grid-area: rightbar;
  }
  &__footer {
    grid-area: footer;
  }
}
